#!/bin/bash 

# (c) 2023 Alexander Napylov
# GNU General Public License v.2.0 (see https://www.gnu.org/licenses/gpl-2.0.html)

width=`tput cols`
height=`tput lines`

middle=`expr $width / 2`

RED="\e[0;31m"
GREEN="\e[0;32m"
BROWN="\e[0;33m"
BLUE="\e[0;34m"
PURPLE="\e[0;35m"
CYAN="\e[0;36m"

LIGHT_RED="\e[1;31m"
LIGHT_GREEN="\e[1;32m"
YELLOW="\e[1;33m"
LIGHT_BLUE="\e[1;34m"
LIGHT_PURPLE="\e[1;35m"
LIGHT_CYAN="\e[1;36m"

BLINKING_RED="\e[5;31m"
BLINKING_GREEN="\e[5;32m"
BLINKING_BROWN="\e[5;33m"
BLINKING_BLUE="\e[5;34m"
BLINKING_PURPLE="\e[5;35m"
BLINKING_CYAN="\e[5;36m"

RESET_COLOR="\e[0m"

locale | grep LANG= | grep UTF-8 &> /dev/null
if [ "$?" == "0" ] # UTF-8 encoding is unsing.
then
    BALL=‚óè
else
    BALL=*
fi

BALL_COLORS=($RED $GREEN $BROWN $BLUE $PURPLE $CYAN $LIGHT_RED $LIGHT_GREEN $YELLOW $LIGHT_BLUE $LIGHT_PURPLE $BLINKING_CYAN $BLINKING_RED $BLINKING_GREEN $BLINKING_BROWN $BLINKING_BLUE $BLINKING_PURPLE $BLINKING_CYAN)

done_paint=1

function paint_ball {
    local line_no=$1
    local line_begin=$2
    local line_size=$3

    local flag=`expr $line_no % 3` 
    if [ "$flag" == "0" ]
    then
        local color_index=`expr $RANDOM % ${#BALL_COLORS[*]}`
        local color=${BALL_COLORS[$color_index]}
        
        local pos=`expr $line_begin + $RANDOM % $line_size`
        tput cup $line_no $pos
        echo -en "$color$BALL$GREEN"
    fi
}

function paint_line {
    local line_pos=$1
    local begin_col=$2
    local half_size=$3

    if [ $begin_col -lt 0 ]
    then
        done_paint=0
        return
    fi
    tput cup $line_pos $begin_col

    local full_size=`expr $half_size + $half_size + 1`

    echo -en $GREEN
    for ((j=0; j < $half_size; j++))
    do
        echo -en /
    done
    echo -n "^"
    for ((j=0; j < $half_size; j++))
    do
        echo -en \\
    done

    paint_ball $line_pos $begin_col $full_size

    tput cup $line_pos `expr $begin_col + $full_size`
    echo -e $RESET_COLOR
}

function paint_part {
    local first_line=$1
    local part_size=$2
    local offset=$3

    local end_line=`expr $first_line + $part_size`
    local i=$first_line
    for ((i=$first_line; i < end_line; i++))
    do
        paint_line $i `expr $middle - $offset` $offset
        offset=`expr $offset + 1`
    done
}

clear

tput cup 0 $middle
echo -e $RED*

tput cup 1 $middle
echo -e $GREEN^

current_line=2
current_line_size=1
current_part_size=3

while [ `expr $current_line + $current_part_size` -lt $height -a $done_paint -eq 1 ]
do
    paint_part $current_line $current_part_size $current_line_size
    current_line_size=`expr $current_line_size + $current_part_size - 2`
    current_line=`expr $current_line + $current_part_size`
    current_part_size=`expr $current_part_size + 1`
done

